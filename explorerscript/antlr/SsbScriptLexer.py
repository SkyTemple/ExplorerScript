# Generated from SsbScript.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,398,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,1,0,1,0,1,1,1,1,1,1,5,1,99,8,1,10,1,12,1,102,9,1,1,1,1,1,1,1,
        1,1,5,1,108,8,1,10,1,12,1,111,9,1,1,1,3,1,114,8,1,1,2,1,2,1,2,1,
        2,1,2,5,2,121,8,2,10,2,12,2,124,9,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,5,2,134,8,2,10,2,12,2,137,9,2,1,2,1,2,1,2,3,2,142,8,2,1,3,1,
        3,1,3,3,3,147,8,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,
        1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,3,15,229,8,15,1,16,
        3,16,232,8,16,1,16,1,16,5,16,236,8,16,10,16,12,16,239,9,16,1,16,
        3,16,242,8,16,1,16,4,16,245,8,16,11,16,12,16,246,3,16,249,8,16,1,
        17,3,17,252,8,17,1,17,1,17,1,17,4,17,257,8,17,11,17,12,17,258,1,
        18,3,18,262,8,18,1,18,1,18,1,18,4,18,267,8,18,11,18,12,18,268,1,
        19,3,19,272,8,19,1,19,1,19,1,19,4,19,277,8,19,11,19,12,19,278,1,
        20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,
        26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,3,32,306,
        8,32,1,32,4,32,309,8,32,11,32,12,32,310,1,32,1,32,4,32,315,8,32,
        11,32,12,32,316,1,32,3,32,320,8,32,1,32,1,32,4,32,324,8,32,11,32,
        12,32,325,3,32,328,8,32,1,33,1,33,1,33,1,33,3,33,334,8,33,1,33,1,
        33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,
        39,1,40,1,40,1,41,4,41,354,8,41,11,41,12,41,355,1,42,1,42,3,42,360,
        8,42,1,42,3,42,363,8,42,1,42,1,42,3,42,367,8,42,1,43,1,43,1,43,1,
        43,5,43,373,8,43,10,43,12,43,376,9,43,1,43,1,43,1,43,3,43,381,8,
        43,1,44,1,44,1,44,1,44,5,44,387,8,44,10,44,12,44,390,9,44,1,45,1,
        45,5,45,394,8,45,10,45,12,45,397,9,45,3,122,135,374,0,46,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
        26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,0,73,
        0,75,0,77,0,79,0,81,0,83,0,85,0,87,0,89,0,91,0,1,0,16,4,0,10,10,
        12,13,39,39,92,92,4,0,10,10,12,13,34,34,92,92,1,0,36,36,1,0,126,
        126,2,0,79,79,111,111,2,0,88,88,120,120,2,0,66,66,98,98,1,0,49,57,
        1,0,48,57,1,0,48,55,3,0,48,57,65,70,97,102,1,0,48,49,3,0,9,10,13,
        13,32,32,2,0,10,10,13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
        95,95,97,122,427,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
        0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
        0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
        0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
        0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
        0,69,1,0,0,0,1,93,1,0,0,0,3,113,1,0,0,0,5,141,1,0,0,0,7,146,1,0,
        0,0,9,148,1,0,0,0,11,153,1,0,0,0,13,157,1,0,0,0,15,167,1,0,0,0,17,
        178,1,0,0,0,19,192,1,0,0,0,21,198,1,0,0,0,23,207,1,0,0,0,25,216,
        1,0,0,0,27,218,1,0,0,0,29,221,1,0,0,0,31,228,1,0,0,0,33,248,1,0,
        0,0,35,251,1,0,0,0,37,261,1,0,0,0,39,271,1,0,0,0,41,280,1,0,0,0,
        43,282,1,0,0,0,45,284,1,0,0,0,47,286,1,0,0,0,49,288,1,0,0,0,51,290,
        1,0,0,0,53,292,1,0,0,0,55,294,1,0,0,0,57,296,1,0,0,0,59,298,1,0,
        0,0,61,300,1,0,0,0,63,302,1,0,0,0,65,327,1,0,0,0,67,333,1,0,0,0,
        69,337,1,0,0,0,71,339,1,0,0,0,73,342,1,0,0,0,75,344,1,0,0,0,77,346,
        1,0,0,0,79,348,1,0,0,0,81,350,1,0,0,0,83,353,1,0,0,0,85,357,1,0,
        0,0,87,368,1,0,0,0,89,382,1,0,0,0,91,391,1,0,0,0,93,94,5,59,0,0,
        94,2,1,0,0,0,95,100,5,39,0,0,96,99,3,71,35,0,97,99,8,0,0,0,98,96,
        1,0,0,0,98,97,1,0,0,0,99,102,1,0,0,0,100,98,1,0,0,0,100,101,1,0,
        0,0,101,103,1,0,0,0,102,100,1,0,0,0,103,114,5,39,0,0,104,109,5,34,
        0,0,105,108,3,71,35,0,106,108,8,1,0,0,107,105,1,0,0,0,107,106,1,
        0,0,0,108,111,1,0,0,0,109,107,1,0,0,0,109,110,1,0,0,0,110,112,1,
        0,0,0,111,109,1,0,0,0,112,114,5,34,0,0,113,95,1,0,0,0,113,104,1,
        0,0,0,114,4,1,0,0,0,115,116,5,39,0,0,116,117,5,39,0,0,117,118,5,
        39,0,0,118,122,1,0,0,0,119,121,9,0,0,0,120,119,1,0,0,0,121,124,1,
        0,0,0,122,123,1,0,0,0,122,120,1,0,0,0,123,125,1,0,0,0,124,122,1,
        0,0,0,125,126,5,39,0,0,126,127,5,39,0,0,127,142,5,39,0,0,128,129,
        5,34,0,0,129,130,5,34,0,0,130,131,5,34,0,0,131,135,1,0,0,0,132,134,
        9,0,0,0,133,132,1,0,0,0,134,137,1,0,0,0,135,136,1,0,0,0,135,133,
        1,0,0,0,136,138,1,0,0,0,137,135,1,0,0,0,138,139,5,34,0,0,139,140,
        5,34,0,0,140,142,5,34,0,0,141,115,1,0,0,0,141,128,1,0,0,0,142,6,
        1,0,0,0,143,147,3,13,6,0,144,147,3,15,7,0,145,147,3,17,8,0,146,143,
        1,0,0,0,146,144,1,0,0,0,146,145,1,0,0,0,147,8,1,0,0,0,148,149,5,
        99,0,0,149,150,5,111,0,0,150,151,5,114,0,0,151,152,5,111,0,0,152,
        10,1,0,0,0,153,154,5,100,0,0,154,155,5,101,0,0,155,156,5,102,0,0,
        156,12,1,0,0,0,157,158,5,102,0,0,158,159,5,111,0,0,159,160,5,114,
        0,0,160,161,5,95,0,0,161,162,5,97,0,0,162,163,5,99,0,0,163,164,5,
        116,0,0,164,165,5,111,0,0,165,166,5,114,0,0,166,14,1,0,0,0,167,168,
        5,102,0,0,168,169,5,111,0,0,169,170,5,114,0,0,170,171,5,95,0,0,171,
        172,5,111,0,0,172,173,5,98,0,0,173,174,5,106,0,0,174,175,5,101,0,
        0,175,176,5,99,0,0,176,177,5,116,0,0,177,16,1,0,0,0,178,179,5,102,
        0,0,179,180,5,111,0,0,180,181,5,114,0,0,181,182,5,95,0,0,182,183,
        5,112,0,0,183,184,5,101,0,0,184,185,5,114,0,0,185,186,5,102,0,0,
        186,187,5,111,0,0,187,188,5,114,0,0,188,189,5,109,0,0,189,190,5,
        101,0,0,190,191,5,114,0,0,191,18,1,0,0,0,192,193,5,97,0,0,193,194,
        5,108,0,0,194,195,5,105,0,0,195,196,5,97,0,0,196,197,5,115,0,0,197,
        20,1,0,0,0,198,199,5,112,0,0,199,200,5,114,0,0,200,201,5,101,0,0,
        201,202,5,118,0,0,202,203,5,105,0,0,203,204,5,111,0,0,204,205,5,
        117,0,0,205,206,5,115,0,0,206,22,1,0,0,0,207,208,5,80,0,0,208,209,
        5,111,0,0,209,210,5,115,0,0,210,211,5,105,0,0,211,212,5,116,0,0,
        212,213,5,105,0,0,213,214,5,111,0,0,214,215,5,110,0,0,215,24,1,0,
        0,0,216,217,3,91,45,0,217,26,1,0,0,0,218,219,7,2,0,0,219,220,3,91,
        45,0,220,28,1,0,0,0,221,222,7,3,0,0,222,223,3,91,45,0,223,30,1,0,
        0,0,224,229,3,33,16,0,225,229,3,35,17,0,226,229,3,37,18,0,227,229,
        3,39,19,0,228,224,1,0,0,0,228,225,1,0,0,0,228,226,1,0,0,0,228,227,
        1,0,0,0,229,32,1,0,0,0,230,232,5,45,0,0,231,230,1,0,0,0,231,232,
        1,0,0,0,232,233,1,0,0,0,233,237,3,73,36,0,234,236,3,75,37,0,235,
        234,1,0,0,0,236,239,1,0,0,0,237,235,1,0,0,0,237,238,1,0,0,0,238,
        249,1,0,0,0,239,237,1,0,0,0,240,242,5,45,0,0,241,240,1,0,0,0,241,
        242,1,0,0,0,242,244,1,0,0,0,243,245,5,48,0,0,244,243,1,0,0,0,245,
        246,1,0,0,0,246,244,1,0,0,0,246,247,1,0,0,0,247,249,1,0,0,0,248,
        231,1,0,0,0,248,241,1,0,0,0,249,34,1,0,0,0,250,252,5,45,0,0,251,
        250,1,0,0,0,251,252,1,0,0,0,252,253,1,0,0,0,253,254,5,48,0,0,254,
        256,7,4,0,0,255,257,3,77,38,0,256,255,1,0,0,0,257,258,1,0,0,0,258,
        256,1,0,0,0,258,259,1,0,0,0,259,36,1,0,0,0,260,262,5,45,0,0,261,
        260,1,0,0,0,261,262,1,0,0,0,262,263,1,0,0,0,263,264,5,48,0,0,264,
        266,7,5,0,0,265,267,3,79,39,0,266,265,1,0,0,0,267,268,1,0,0,0,268,
        266,1,0,0,0,268,269,1,0,0,0,269,38,1,0,0,0,270,272,5,45,0,0,271,
        270,1,0,0,0,271,272,1,0,0,0,272,273,1,0,0,0,273,274,5,48,0,0,274,
        276,7,6,0,0,275,277,3,81,40,0,276,275,1,0,0,0,277,278,1,0,0,0,278,
        276,1,0,0,0,278,279,1,0,0,0,279,40,1,0,0,0,280,281,5,40,0,0,281,
        42,1,0,0,0,282,283,5,41,0,0,283,44,1,0,0,0,284,285,5,44,0,0,285,
        46,1,0,0,0,286,287,5,58,0,0,287,48,1,0,0,0,288,289,5,61,0,0,289,
        50,1,0,0,0,290,291,5,43,0,0,291,52,1,0,0,0,292,293,5,64,0,0,293,
        54,1,0,0,0,294,295,5,167,0,0,295,56,1,0,0,0,296,297,5,123,0,0,297,
        58,1,0,0,0,298,299,5,125,0,0,299,60,1,0,0,0,300,301,5,60,0,0,301,
        62,1,0,0,0,302,303,5,62,0,0,303,64,1,0,0,0,304,306,5,45,0,0,305,
        304,1,0,0,0,305,306,1,0,0,0,306,308,1,0,0,0,307,309,3,75,37,0,308,
        307,1,0,0,0,309,310,1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,
        312,1,0,0,0,312,314,5,46,0,0,313,315,3,75,37,0,314,313,1,0,0,0,315,
        316,1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,0,317,328,1,0,0,0,318,
        320,5,45,0,0,319,318,1,0,0,0,319,320,1,0,0,0,320,321,1,0,0,0,321,
        323,5,46,0,0,322,324,3,75,37,0,323,322,1,0,0,0,324,325,1,0,0,0,325,
        323,1,0,0,0,325,326,1,0,0,0,326,328,1,0,0,0,327,305,1,0,0,0,327,
        319,1,0,0,0,328,66,1,0,0,0,329,334,3,89,44,0,330,334,3,87,43,0,331,
        334,3,83,41,0,332,334,3,85,42,0,333,329,1,0,0,0,333,330,1,0,0,0,
        333,331,1,0,0,0,333,332,1,0,0,0,334,335,1,0,0,0,335,336,6,33,0,0,
        336,68,1,0,0,0,337,338,9,0,0,0,338,70,1,0,0,0,339,340,5,92,0,0,340,
        341,9,0,0,0,341,72,1,0,0,0,342,343,7,7,0,0,343,74,1,0,0,0,344,345,
        7,8,0,0,345,76,1,0,0,0,346,347,7,9,0,0,347,78,1,0,0,0,348,349,7,
        10,0,0,349,80,1,0,0,0,350,351,7,11,0,0,351,82,1,0,0,0,352,354,7,
        12,0,0,353,352,1,0,0,0,354,355,1,0,0,0,355,353,1,0,0,0,355,356,1,
        0,0,0,356,84,1,0,0,0,357,359,5,92,0,0,358,360,3,83,41,0,359,358,
        1,0,0,0,359,360,1,0,0,0,360,366,1,0,0,0,361,363,5,13,0,0,362,361,
        1,0,0,0,362,363,1,0,0,0,363,364,1,0,0,0,364,367,5,10,0,0,365,367,
        2,12,13,0,366,362,1,0,0,0,366,365,1,0,0,0,367,86,1,0,0,0,368,369,
        5,47,0,0,369,370,5,42,0,0,370,374,1,0,0,0,371,373,9,0,0,0,372,371,
        1,0,0,0,373,376,1,0,0,0,374,375,1,0,0,0,374,372,1,0,0,0,375,380,
        1,0,0,0,376,374,1,0,0,0,377,378,5,42,0,0,378,381,5,47,0,0,379,381,
        5,0,0,1,380,377,1,0,0,0,380,379,1,0,0,0,381,88,1,0,0,0,382,383,5,
        47,0,0,383,384,5,47,0,0,384,388,1,0,0,0,385,387,8,13,0,0,386,385,
        1,0,0,0,387,390,1,0,0,0,388,386,1,0,0,0,388,389,1,0,0,0,389,90,1,
        0,0,0,390,388,1,0,0,0,391,395,7,14,0,0,392,394,7,15,0,0,393,392,
        1,0,0,0,394,397,1,0,0,0,395,393,1,0,0,0,395,396,1,0,0,0,396,92,1,
        0,0,0,397,395,1,0,0,0,37,0,98,100,107,109,113,122,135,141,146,228,
        231,237,241,246,248,251,258,261,268,271,278,305,310,316,319,325,
        327,333,355,359,362,366,374,380,388,395,1,6,0,0
    ]

class SsbScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    STRING_LITERAL = 2
    MULTILINE_STRING_LITERAL = 3
    FOR_TARGET = 4
    CORO = 5
    DEF = 6
    FOR_ACTOR = 7
    FOR_OBJECT = 8
    FOR_PERFORMER = 9
    ALIAS = 10
    PREVIOUS = 11
    POSITION = 12
    IDENTIFIER = 13
    VARIABLE = 14
    MACRO_CALL = 15
    INTEGER = 16
    DECIMAL_INTEGER = 17
    OCT_INTEGER = 18
    HEX_INTEGER = 19
    BIN_INTEGER = 20
    OPEN_PAREN = 21
    CLOSE_PAREN = 22
    COMMA = 23
    COLON = 24
    ASSIGN = 25
    PLUS = 26
    AT = 27
    PARAGRAPH = 28
    OPEN_BRACE = 29
    CLOSE_BRACE = 30
    OPEN_SHARP = 31
    CLOSE_SHARP = 32
    DECIMAL = 33
    SKIP_ = 34
    UNKNOWN_CHAR = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'coro'", "'def'", "'for_actor'", "'for_object'", "'for_performer'", 
            "'alias'", "'previous'", "'Position'", "'('", "')'", "','", 
            "':'", "'='", "'+'", "'@'", "'\\u00A7'", "'{'", "'}'", "'<'", 
            "'>'" ]

    symbolicNames = [ "<INVALID>",
            "STRING_LITERAL", "MULTILINE_STRING_LITERAL", "FOR_TARGET", 
            "CORO", "DEF", "FOR_ACTOR", "FOR_OBJECT", "FOR_PERFORMER", "ALIAS", 
            "PREVIOUS", "POSITION", "IDENTIFIER", "VARIABLE", "MACRO_CALL", 
            "INTEGER", "DECIMAL_INTEGER", "OCT_INTEGER", "HEX_INTEGER", 
            "BIN_INTEGER", "OPEN_PAREN", "CLOSE_PAREN", "COMMA", "COLON", 
            "ASSIGN", "PLUS", "AT", "PARAGRAPH", "OPEN_BRACE", "CLOSE_BRACE", 
            "OPEN_SHARP", "CLOSE_SHARP", "DECIMAL", "SKIP_", "UNKNOWN_CHAR" ]

    ruleNames = [ "T__0", "STRING_LITERAL", "MULTILINE_STRING_LITERAL", 
                  "FOR_TARGET", "CORO", "DEF", "FOR_ACTOR", "FOR_OBJECT", 
                  "FOR_PERFORMER", "ALIAS", "PREVIOUS", "POSITION", "IDENTIFIER", 
                  "VARIABLE", "MACRO_CALL", "INTEGER", "DECIMAL_INTEGER", 
                  "OCT_INTEGER", "HEX_INTEGER", "BIN_INTEGER", "OPEN_PAREN", 
                  "CLOSE_PAREN", "COMMA", "COLON", "ASSIGN", "PLUS", "AT", 
                  "PARAGRAPH", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_SHARP", 
                  "CLOSE_SHARP", "DECIMAL", "SKIP_", "UNKNOWN_CHAR", "STRING_ESCAPE_SEQ", 
                  "NON_ZERO_DIGIT", "DIGIT", "OCT_DIGIT", "HEX_DIGIT", "BIN_DIGIT", 
                  "SPACES", "LINE_JOINING", "BLOCK_COMMENT", "LINE_COMMENT", 
                  "IDENTIFIER_BASE" ]

    grammarFileName = "SsbScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


