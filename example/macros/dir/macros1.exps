import "./macros2.exps";

macro remote_macro(%aVariable, %aString) {
    vars_in_remote_macro(%aVariable, %aString, $notAvailable);
    ~remote_macro2("from remote_macro", %aString);
    debug_Print("REMOTE2 SHOULD END HERE");
    ~macro_in_macros_2();
}

macro remote_macro2(%aString, %anotherString) {
    debug_Print("BELOW IS A TEST RETURN");
    if ($TEST_VAR < 3) {
        print("The variable is smaller");
        return; // This should jump out of the macro.
    }
    vars_in_remote_macro2(%aString, %anotherString, $notAvailable);
}

/*macro calls_local_macro($i1, $i2, $i3, %aString) {
    // Compiling this must fail, because local_macro is in base.
    ~local_macro($i1, $i2, $i3, %aString);
}*/

/*macro recursion2() {
    // Compiling this must fail, because of the dependency cycle
    ~recursion();
}

macro recursion() {
    ~recursion2();
}*/